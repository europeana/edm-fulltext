<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana</groupId>
        <artifactId>europeana-parent-pom</artifactId>
        <version>2.4</version>
    </parent>

    <repositories>
        <repository>
            <id>libs-release-local</id>
            <name>europeana-releases</name>
            <url>https://artifactory.eanadev.org/artifactory/libs-release</url>
        </repository>
        <repository>
            <id>libs-snapshots-local</id>
            <name>europeana-snapshots</name>
            <url>https://artifactory.eanadev.org/artifactory/libs-snapshot</url>
        </repository>
    </repositories>

    <artifactId>edm-fulltext</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <name>EDM Fulltext</name>
    <description>EDM Fulltext Class Model & Conversion Classes</description>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <api-commons.version>0.3.16</api-commons.version>
        <!-- upgraded to 2.5.14 as 2.6.x is not compatible with swagger (springfox-swagger-ui)-->
        <!-- org.apache.tomcat.embed version 9.0.56 is included uptill 2.6.3 which is vulnerable. See : CVE-2022-23181  -->
        <spring-boot.version>2.5.14</spring-boot.version>
        <jackson.version>2.14.0</jackson.version>
        <io-informatics.version>0.1.1</io-informatics.version>
        <morphia.version>2.2.9</morphia.version>
        <mongo-driver.version>4.5.1</mongo-driver.version>
        <snappy.version>1.1.8.4</snappy.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-io.version>2.4</commons-io.version>
        <!-- Note that upgrading to a newer version of Junit Jupiter may not work with older IntelliJ versions (2019.2.1)
             However for Maven verify goal a newer Jupiter version is no problem-->
        <junit-jupiter.version>5.6.0</junit-jupiter.version>
        <mockito.version>3.7.0</mockito.version>
        <unitils.version>3.4.6</unitils.version>
        <springdoc.version>1.6.13</springdoc.version>
        <tomcat.version>9.0.58</tomcat.version>
        <mock-webserver.version>4.9.0</mock-webserver.version>
        <testcontainers.version>1.16.0</testcontainers.version>
        <eclipse-jetty.version>11.0.11</eclipse-jetty.version>
        <spring-batch.version>4.3.6</spring-batch.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.16</version>
            </dependency>
            <dependency>
                <groupId>com.github.jsonld-java</groupId>
                <artifactId>jsonld-java</artifactId>
                <version>0.13.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.14</version>
            </dependency>
		</dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <classesDirectory>${project.build.directory}/classes</classesDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-integration-test-source</id>
                        <!-- Normally this would be attached to the generate-test-source phase,
                          however we attach to generate-sources so that the git-code-format plugin can pick
                          up integration test source files (see plugin config above) -->
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the source directory of our integration tests -->
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <!-- Configures the resource directory of our integration tests -->
                            <resources>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>src/integration-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Tmp added to see compilation errors after upgrading dependencies, see
            https://stackoverflow.com/questions/62583298/exception-in-thread-main-java-lang-assertionerror-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>depcheck</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>7.3.0</version>
                        <configuration>
                            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                            <failBuildOnCVSS>8</failBuildOnCVSS>
                            <suppressionFiles>
                                <suppressionFile>owasp-suppress.xml</suppressionFile>
                            </suppressionFiles>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>